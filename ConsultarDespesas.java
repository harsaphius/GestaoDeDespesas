
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author pcris
 */
public class ConsultarDespesas extends javax.swing.JInternalFrame {

    BDconnection objcon = new BDconnection();
    FillComboBox fillcombo = new FillComboBox();

    
    public ConsultarDespesas() {
        initComponents();
        cmb_CategoriasDespesas.setModel(new javax.swing.DefaultComboBoxModel<>(fillcombo.getAllCategorias()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btn_sair = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cmb_CategoriasDespesas = new javax.swing.JComboBox<>();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jFormattedTextField2 = new javax.swing.JFormattedTextField();
        btn_consultar = new javax.swing.JButton();
        btn_InserirDespesa = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        T_ConsutaDespesas = new javax.swing.JTable();
        btn_consultabycategoria = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1.setText("Consultar Despesas");

        btn_sair.setText("Sair");
        btn_sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sairActionPerformed(evt);
            }
        });

        jLabel3.setText("Data Inicio");

        cmb_CategoriasDespesas.setToolTipText("Selecione uma categoria");
        cmb_CategoriasDespesas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_CategoriasDespesasActionPerformed(evt);
            }
        });

        jLabel2.setText("Categoria");

        jLabel4.setText("Data Fim");

        btn_consultar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_consultar.setText("Listar Despesas");
        btn_consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_consultarActionPerformed(evt);
            }
        });

        btn_InserirDespesa.setText("Inserir Despesa");
        btn_InserirDespesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_InserirDespesaActionPerformed(evt);
            }
        });

        T_ConsutaDespesas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "RefInterna", "Categoria", "Fatura/Referência", "Entidade", "Descrição", "Data", "Valor", "NIF", "Pago", "Tipo de Pagamento", "Código ", "Obs. Tipo de Pagamento", "Concelho", "Utilizador", "Data Registo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, false, false, false, false, false, true, true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(T_ConsutaDespesas);

        btn_consultabycategoria.setText("Consultar");
        btn_consultabycategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_consultabycategoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_sair))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmb_CategoriasDespesas, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_consultabycategoria)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(263, 263, 263)
                        .addComponent(btn_consultar)
                        .addGap(18, 18, 18)
                        .addComponent(btn_InserirDespesa))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(24, 24, 24))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(425, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(408, 408, 408))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmb_CategoriasDespesas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_consultar)
                            .addComponent(btn_InserirDespesa)
                            .addComponent(btn_consultabycategoria)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btn_sair)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sairActionPerformed
        this.dispose();
    }//GEN-LAST:event_btn_sairActionPerformed

    private void btn_consultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_consultarActionPerformed
        
        DefaultTableModel tablemodel = (DefaultTableModel) T_ConsutaDespesas.getModel();
        objcon.OpenConnection();
      
         try{

            PreparedStatement ps = objcon.connect.prepareStatement("SELECT desp.ID, CONCAT(desp.ID, \"/\", (DATE_FORMAT(cast(desp.DataAdd as DATE), \"%Y\"))) as RefInterna, cat.Categoria, desp.NFatura, ent.Entidade, desp.Descricao, cast(desp.Data as DATE) as Data, cast(desp.Valor AS DECIMAL(7,2)) as valor, desp.NIF, CASE WHEN desp.Pago = true THEN 'Sim' ELSE 'Não' END as Pago, tp.TipoPagamento, desp.Concelho, usr.nome as UserAdd, cast(desp.DataAdd as DATE) as DataAdd FROM despesas desp left join categorias cat on desp.CategoriaId = cat.ID left join user usr on desp.UserAdd_Id = usr.Id left join entidades ent on desp.NIF = ent.NIF left join tipo_pagamento tp on desp.TipoPagamentoId = tp.ID");
            ResultSet resultset = ps.executeQuery();
            
            tablemodel.setRowCount(0);
            while(resultset.next())
            {
                int id = resultset.getInt(1);
                String refinterna = resultset.getString(2);
                String categoria = resultset.getString(3);
                String fatura = resultset.getString(4);
                String entidade = resultset.getString(5);
                String descricao = resultset.getString(6);
                String data = resultset.getString(7);
                String valor = resultset.getString(8);
                String nif = resultset.getString(9);
                String pago = resultset.getString(10);
                String tipopagamento = resultset.getString(11);
                String concelho = resultset.getString(12);
                String useradd = resultset.getString(13);
                String dataadd = resultset.getString(14);
                Object [] datarow = {id,refinterna,categoria,fatura,entidade,descricao,data,valor,nif,pago,tipopagamento,concelho,useradd,dataadd};
                tablemodel.addRow(datarow);
                
            }
        }catch (SQLException e)
        {
            System.err.println(e);
        } 
         
    }//GEN-LAST:event_btn_consultarActionPerformed

    private void btn_InserirDespesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_InserirDespesaActionPerformed
    
        new addDespesa().setVisible(true);
        this.dispose();
/*
        RegistarDespesas registarDespesas = new RegistarDespesas();
        registarDespesas.setVisible(true);
        this.dispose();
*/
    }//GEN-LAST:event_btn_InserirDespesaActionPerformed

    private void cmb_CategoriasDespesasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_CategoriasDespesasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_CategoriasDespesasActionPerformed

    private void btn_consultabycategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_consultabycategoriaActionPerformed

        DefaultTableModel tablemodel = (DefaultTableModel) T_ConsutaDespesas.getModel();
        String cat = (String) cmb_CategoriasDespesas.getSelectedItem();
        String categoriaSelected = "'" + cat + "'";
        objcon.OpenConnection();
      
         try{

            PreparedStatement ps = objcon.connect.prepareStatement("SELECT desp.ID, CONCAT(desp.ID, \"/\", (DATE_FORMAT(cast(desp.DataAdd as DATE), \"%Y\"))) as RefInterna, cat.Categoria, desp.NFatura, ent.Entidade, desp.Descricao, cast(desp.Data as DATE) as Data, cast(desp.Valor AS DECIMAL(7,2)) as valor, desp.NIF, CASE WHEN desp.Pago = true THEN 'Sim' ELSE 'Não' END as Pago, tp.TipoPagamento, desp.Concelho, usr.nome as UserAdd, cast(desp.DataAdd as DATE) as DataAdd FROM despesas desp left join categorias cat on desp.CategoriaId = cat.ID left join user usr on desp.UserAdd_Id = usr.Id left join entidades ent on desp.NIF = ent.NIF left join tipo_pagamento tp on desp.TipoPagamentoId = tp.ID where cat.categoria =" + categoriaSelected + "");
            ResultSet resultset = ps.executeQuery();
            
            tablemodel.setRowCount(0);
            while(resultset.next())
            {
                int id = resultset.getInt(1);
                String refinterna = resultset.getString(2);
                String categoria = resultset.getString(3);
                String fatura = resultset.getString(4);
                String entidade = resultset.getString(5);
                String descricao = resultset.getString(6);
                String data = resultset.getString(7);
                String valor = resultset.getString(8);
                String nif = resultset.getString(9);
                String pago = resultset.getString(10);
                String tipopagamento = resultset.getString(11);
                String concelho = resultset.getString(12);
                String useradd = resultset.getString(13);
                String dataadd = resultset.getString(14);
                Object [] datarow = {id,refinterna,categoria,fatura,entidade,descricao,data,valor,nif,pago,tipopagamento,concelho,useradd,dataadd};
                tablemodel.addRow(datarow);
                
            }
        }catch (SQLException e)
        {
            System.err.println(e);
        } 

        // TODO add your handling code here:
    }//GEN-LAST:event_btn_consultabycategoriaActionPerformed

    private String[] FillCombo(){
        objcon.OpenConnection();
        ArrayList<String> strList = new ArrayList<String>();

        try {
        PreparedStatement ps = objcon.connect.prepareStatement("select Categoria from categorias");

        ResultSet rs = ps.executeQuery();
        while (rs.next()) {
        strList.add(rs.getString(1));

        }
        } catch (Exception e) {
        System.out.println(e);
        }
        String [] x = strList.toArray(new String[0]);
        return x;
        }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable T_ConsutaDespesas;
    private javax.swing.JButton btn_InserirDespesa;
    private javax.swing.JButton btn_consultabycategoria;
    private javax.swing.JButton btn_consultar;
    private javax.swing.JButton btn_sair;
    private javax.swing.JComboBox<String> cmb_CategoriasDespesas;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
